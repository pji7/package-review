<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.3"/>
    <errors>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9407272404714048978">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="47" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="44" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="40" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="3042826062420512784">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="74" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="60" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="71" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="69" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="69" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="67" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7084620792340970287">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="40" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4958777713730657908">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="67" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12106913518443141649">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_01.cpp" line="90" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2144109924799020521">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="17217663925787177762">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="145" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="121" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="142" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="138" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7824929144784371443">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="174" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="155" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="171" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="167" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18163039519586576707">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15533090629933318687">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="83" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13600987779164331907">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="108" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8161927920738310004">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="138" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18247373205836314717">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_02.cpp" line="167" column="53"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="54107604489531604">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="34" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="3061959003726188021">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="40" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="11570074927133961794">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="67" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;!=&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="7779481453540542278">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="73" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="4157343808641205746">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="97" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="12493018441843523008">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="103" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;!=&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="8752836107123801345">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="122" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="3250307346645504848">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="133" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="14409885011721084954">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="156" column="9"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;==&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="3148517053170273782">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="162" column="9"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="5838803657335624323">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="11607792928029468740">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="145" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="121" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="142" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="138" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4436192199863847631">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="174" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="155" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="171" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="167" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15301384496071169429">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11702100981278618384">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="83" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4313208293609257003">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="108" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16610001516988580079">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="138" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8111433278396559529">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_03.cpp" line="167" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="16581685005828264301">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="58" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="39" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="55" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="53" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="53" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="51" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="17906326315262629863">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="151" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="127" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="148" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="146" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="146" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="144" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9561926663392839844">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="180" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="161" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="177" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="175" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="175" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="173" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13021089742359381103">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="51" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14847949243739653709">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="89" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12340031958620734419">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="114" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14125079695769033765">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="144" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9924480158760983758">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_04.cpp" line="173" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6337224643724666409">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="58" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="39" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="55" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="53" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="53" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="51" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="5050252997475376096">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="151" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="127" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="148" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="146" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="146" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="144" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12034026485230780029">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="180" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="161" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="177" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="175" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="175" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="173" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="725822735848547976">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="51" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18303174647989193299">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="89" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11939769628253482317">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="114" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13021335770095576010">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="144" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5495167330593439206">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_05.cpp" line="173" column="53"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="11489897265918640961">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="39" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="687991885468610808">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="45" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="13510033403399207975">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="72" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE != 5&apos; is always false." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="7225872207577289873">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="78" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="6008180610362461757">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="102" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="11185410201705758766">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="108" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE != 5&apos; is always false." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="218552523092840479">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="127" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="16482633319032675563">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="138" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="3398603132294054047">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="161" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &apos;STATIC_CONST_FIVE == 5&apos; is always true." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" hash="2706745524524882335">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="167" column="25"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="29" column="38" info="&apos;STATIC_CONST_FIVE&apos; is assigned value &apos;5&apos; here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="8265107967100097857">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="57" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="38" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="54" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="50" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="13165590489319008717">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="150" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="126" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="147" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="143" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14766613877293502632">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="179" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="160" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="176" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="174" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="174" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="172" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9294623492763347449">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="50" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10545329351197782345">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="88" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3871891858631195685">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="113" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7395006686617187183">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="143" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14426610225218780505">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_06.cpp" line="172" column="53"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="13847705625458957110">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="39" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="57644145558911340">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="45" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="10370500662729479615">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="72" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive!=5&apos; is always false" verbose="Condition &apos;staticFive!=5&apos; is always false" cwe="570" hash="97129832521830003">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="78" column="18" info="Condition &apos;staticFive!=5&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="868483321640905532">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="102" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="6678968721920638077">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="108" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive!=5&apos; is always false" verbose="Condition &apos;staticFive!=5&apos; is always false" cwe="570" hash="6440569005801419514">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="127" column="18" info="Condition &apos;staticFive!=5&apos; is always false"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="823450681161950204">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="138" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="1455035517154203109">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="161" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;staticFive==5&apos; is always true" verbose="Condition &apos;staticFive==5&apos; is always true" cwe="571" hash="12714070208607113099">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="167" column="18" info="Condition &apos;staticFive==5&apos; is always true"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="8288256609942600987">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="57" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="38" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="54" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="50" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="885057231852412121">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="150" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="126" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="147" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="143" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10099209556277812184">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="179" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="160" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="176" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="174" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="174" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="172" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3534959096875143068">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="50" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15970970679610184214">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="88" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2877686967320308392">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="113" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10955156179707832003">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="143" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9940519615745984436">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_07.cpp" line="172" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="11754829990916092005">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="65" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="46" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="62" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="60" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="60" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="58" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12504685109026765424">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="158" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="134" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="155" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="153" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="153" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="151" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="861261825374198547">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="187" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="168" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="184" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="182" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="182" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="180" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2244354134433307431">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="58" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6858009128875232852">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="96" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2203569544490585877">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="121" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8675252254419982912">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="151" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8182510986158438243">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_08.cpp" line="180" column="53"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="900589991907627057">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="40" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="34" column="8" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="7469996978767243232">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="103" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="97" column="8" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="12866468946585928549">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="162" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="156" column="8" info="First condition"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10026272967890943432">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4224190276143684356">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="145" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="121" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="142" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="138" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12066078466722781623">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="174" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="155" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="171" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="167" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7208105930152061427">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4199277536903867145">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="83" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1207506431199296077">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="108" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2101310379748010018">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="138" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11790100820978517519">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_09.cpp" line="167" column="53"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="16007177498253345484">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="40" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="34" column="8" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="17415516672771971507">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="103" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="97" column="8" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="11959195693629399440">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="162" column="8" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="156" column="8" info="First condition"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="17302939143793289758">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9451813387144707181">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="145" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="121" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="142" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="140" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="138" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="724610243044477658">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="174" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="155" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="171" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="167" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4566949516014632103">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="839701013312019994">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="83" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1664241029150434632">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="108" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11746650635276601986">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="138" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10663044401602851701">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_10.cpp" line="167" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14897872035913768458">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="51" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="48" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="44" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6638439625165181204">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="144" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="120" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="141" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="137" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7574409315096543105">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="173" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="154" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="170" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="166" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4845314093878751773">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="44" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2323080189424482446">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="82" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2583188475182403779">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="107" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15844932755761647401">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="137" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15964240560343951297">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_11.cpp" line="166" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="1395867972418564836">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="57" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="54" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="52" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="50" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9138513954547861045">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="157" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="132" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="154" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="152" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="152" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="150" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="13345395400816449482">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="174" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="132" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="171" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="169" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="167" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3707990091839222546">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="50" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5194814798300158514">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="67" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7557667441422219590">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="104" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7394672238373982789">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="117" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16310412285024080340">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="150" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7512407735020091082">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_12.cpp" line="167" column="53"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="2463775567554377145">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="39" column="25" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="33" column="25" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="17316949075740043918">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="102" column="25" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="96" column="25" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="15385818363906285430">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="161" column="25" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="155" column="25" info="First condition"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="15213926950850352532">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="51" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="48" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="44" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="15767555628480509713">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="144" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="120" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="141" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="137" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="8159558539702688669">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="173" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="154" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="170" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="166" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7293140883254411582">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="44" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7712196600541920289">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="82" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17334693097852193673">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="107" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10152605989353101546">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="137" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5002681469089209983">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_13.cpp" line="166" column="53"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="11686678046958221730">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="39" column="18" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="33" column="18" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="8844333918104880849">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="102" column="18" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="96" column="18" info="First condition"/>
        </error>
        <error id="duplicateCondition" severity="style" msg="The if condition is the same as the previous if condition" verbose="The if condition is the same as the previous if condition" cwe="398" hash="13013005598432645152">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="161" column="18" info="Second condition"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="155" column="18" info="First condition"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="15569375238045998409">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="51" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="48" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="46" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="44" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9458446893662984118">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="144" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="120" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="141" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="139" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="137" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14839672667740334425">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="173" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="154" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="170" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="168" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="166" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6761729683933519973">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="44" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9091201967274403304">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="82" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4910935791815672398">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="107" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3956072963677210596">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="137" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3773173788464720730">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_14.cpp" line="166" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="334948215145375342">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="58" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="55" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="53" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="53" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="51" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7962092891331717006">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="177" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="151" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="174" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="172" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="172" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="170" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="13217978684933947242">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="218" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="192" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="215" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="213" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="213" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="211" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10692927180877273705">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="51" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16607039855305111197">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="100" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14778586759992197118">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="133" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5359101084782375990">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="170" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4192231217047486202">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_15.cpp" line="211" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="18238403956420121434">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4343985085173510693">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="114" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="94" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="111" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="109" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="109" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="107" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11930753506505724224">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2976691245690079494">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="80" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17419091806535854719">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_16.cpp" line="107" column="53"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" hash="15897300016274078359">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="43" column="34" info="Shadow variable"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="32" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398" hash="9589390468291285302">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="77" column="34" info="Shadow variable"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="66" column="9" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="3168736437705863771">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="52" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="49" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="47" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="45" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2109519857440165656">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="112" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="93" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="109" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="107" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="107" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="105" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18045594478820144808">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="45" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14498908813554860776">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="79" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9302307477489320811">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_17.cpp" line="105" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10936205079820662099">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="50" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="32" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="47" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="45" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="45" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="43" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6615233914910753760">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="104" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="86" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="101" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="99" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="99" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="97" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11348069637068362586">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="43" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1703021952834372769">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="74" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16566605401024269974">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_18.cpp" line="97" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2714255576649945003">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="48" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="34" column="32" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="45" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="43" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="43" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="41" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2487902431805114240">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="150" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="136" column="36" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="147" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="145" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="143" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17660667162553627171">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="41" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9180757909041166349">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="87" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1904125294049471935">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="115" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15651569636861389849">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_21.cpp" line="143" column="53"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6028128816426410050">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="49" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="35" column="25" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="46" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="44" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="44" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="42" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14853949273772762471">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="122" column="33"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="108" column="30" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="119" column="21" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="117" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="117" column="21" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="115" column="22" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17045475832993089470">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="42" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14512817283208487106">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="79" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13048605880355459211">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="97" column="53"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14555168208325152676">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_22b.cpp" line="115" column="53"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;data&apos; shadows outer variable" verbose="Local variable &apos;data&apos; shadows outer variable" cwe="398" hash="3329021548120399348">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="37" column="20" info="Shadow variable"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="33" column="16" info="Shadowed declaration"/>
            <symbol>data</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;data&apos; shadows outer variable" verbose="Local variable &apos;data&apos; shadows outer variable" cwe="398" hash="13114417253418669799">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="73" column="20" info="Shadow variable"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="69" column="16" info="Shadowed declaration"/>
            <symbol>data</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;data&apos; shadows outer variable" verbose="Local variable &apos;data&apos; shadows outer variable" cwe="398" hash="457320632585942667">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="105" column="20" info="Shadow variable"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_32.cpp" line="101" column="16" info="Shadowed declaration"/>
            <symbol>data</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;dataRef&apos; can be declared with const" verbose="Variable &apos;dataRef&apos; can be declared with const" cwe="398" hash="14130137665916873761">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_33.cpp" line="34" column="17" info="Variable &apos;dataRef&apos; can be declared with const"/>
            <symbol>dataRef</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;dataRef&apos; can be declared with const" verbose="Variable &apos;dataRef&apos; can be declared with const" cwe="398" hash="11823101160706177000">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_33.cpp" line="65" column="17" info="Variable &apos;dataRef&apos; can be declared with const"/>
            <symbol>dataRef</symbol>
        </error>
        <error id="constVariable" severity="style" msg="Variable &apos;dataRef&apos; can be declared with const" verbose="Variable &apos;dataRef&apos; can be declared with const" cwe="398" hash="2392764918025425966">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_33.cpp" line="92" column="17" info="Variable &apos;dataRef&apos; can be declared with const"/>
            <symbol>dataRef</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="15317822537242858744">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="31" column="32" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="3550594837097400324">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="75" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="63" column="36" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="72" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="68" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18323213656467339089">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15112389406718785209">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="68" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14769212287107781173">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_41.cpp" line="96" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="18027309614328793220">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="53" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="41" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="50" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="48" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="48" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="46" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7981682389889962112">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="86" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="74" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="83" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="81" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="81" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="79" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12394602062239107385">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="46" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6494724160023126994">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="79" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10651552538617607884">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_42.cpp" line="108" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="8292443211140070161">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="52" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="40" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="49" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="47" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="47" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="45" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="11784738179824684878">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="84" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="72" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="81" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="79" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="79" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="77" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4683642359681557470">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="45" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10337394143311843579">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="77" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14907763576550560569">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_43.cpp" line="105" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14515546840953122641">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="31" column="32" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14953333759578793790">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="78" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="66" column="36" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="75" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="73" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="73" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="71" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12233397527484664133">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2424355894546869137">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="71" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7874672736931616964">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_44.cpp" line="100" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="1421982180451490558">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="37" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="8092605237896552445">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="82" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="71" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="79" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="77" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="77" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="75" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12070734308464263216">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16790043758456377384">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="75" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11349810744536040072">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_45.cpp" line="105" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6436485878740517538">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="31" column="25" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="15627968253994076987">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="66" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="54" column="29" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="63" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="59" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17275450076878183963">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="11515474055153133315">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="59" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3953426414017106914">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_51b.cpp" line="78" column="49"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="15171177724873683483">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52b.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="2528197031557051955">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52b.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="391309074974128689">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52b.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="3445262724330259639">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="31" column="27" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="16352340802376407880">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="66" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="54" column="31" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="63" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="59" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5396417450986422738">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6705480666764078487">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="59" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4835732714873363445">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_52c.cpp" line="78" column="49"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="3674505620737424181">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53b.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="7946005350783218695">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53b.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="18290417523720812313">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53b.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="7604024723557427747">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53c.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="10706335495537109479">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53c.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="5753568759460389791">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53c.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4273472563000123146">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="31" column="27" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="128628701235116123">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="66" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="54" column="31" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="63" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="59" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4495365650411178571">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17330861561175034853">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="59" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2502099697409071368">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_53d.cpp" line="78" column="49"/>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="10274110740243051883">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54b.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="2863171862338877878">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54b.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="424717492146123702">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54b.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="14785244165424931655">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54c.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="2631194155707896515">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54c.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="15422006119668009656">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54c.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="1370469360168861111">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54d.cpp" line="34" column="27"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="10301576782829232248">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54d.cpp" line="46" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;data&apos; should be passed by const reference." verbose="Parameter &apos;data&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="7984471512645041472">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54d.cpp" line="54" column="31"/>
            <symbol>data</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10921322253701004837">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="31" column="27" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7926716342699270609">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="66" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="54" column="31" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="63" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="59" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="2388225064785364794">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6842319732532567007">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="59" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7767402004908911616">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_54e.cpp" line="78" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2927757386794954437">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="36" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12857371088697780034">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="75" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="63" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="72" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="68" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18206255852554730966">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6426806563371069812">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="68" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8133907260141655886">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_61a.cpp" line="91" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14154029456787883755">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="36" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9653113141224767587">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="75" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="63" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="72" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="70" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="68" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17088406228102325712">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16376953251872024886">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="68" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1592724072135650364">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_62a.cpp" line="91" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="13925270689896260300">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="44" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="33" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="41" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="37" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4829427414768262280">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="68" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="57" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="65" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="63" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="63" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="61" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4318376547099524095">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="37" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17920799769621963150">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="61" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5346055476917606849">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_63b.cpp" line="81" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="16628436234943389578">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="47" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="36" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="44" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="40" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="11673838977505690764">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="74" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="63" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="71" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="69" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="69" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="67" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4981670740271378636">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="40" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10596423495822766626">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="67" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6118647892480727019">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_64b.cpp" line="90" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="17920439093756761673">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="43" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="31" column="25" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="40" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="38" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="36" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14901287296502930759">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="66" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="54" column="29" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="63" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="61" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="59" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15388151356033855085">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="36" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13245104947866022305">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="59" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3992020163749370218">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_65b.cpp" line="78" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="7383952245347045233">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="45" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="34" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="42" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="40" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="40" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="38" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="1255931622900169871">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="69" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="58" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="66" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="64" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="64" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="62" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="15804511521136937132">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="38" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="3159716920811486618">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="62" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8570297201599090278">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_66b.cpp" line="82" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2003224221490540899">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="49" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="38" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="46" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="44" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="44" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="42" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="11269076555415833026">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="73" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="62" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="70" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="68" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="68" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="66" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7095669364310118322">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="42" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6254469049601470584">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="66" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7433877397600086174">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_67b.cpp" line="86" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10605393148060700902">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="37" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12421571094637916266">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="72" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="61" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="69" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="65" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="17972525496388844602">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13920799815994573880">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="65" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14836079457564557651">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_68b.cpp" line="85" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="18342759422311018111">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="37" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="17461652901804271640">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="72" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="61" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="69" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="65" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12707983506098977366">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10422926308061529276">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="65" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4050043572445266302">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_72b.cpp" line="85" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12278361641956346410">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="47" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="36" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="44" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="42" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="40" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="18100422731669653225">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="71" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="60" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="68" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="66" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="66" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="64" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="5652227965727770805">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="40" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="10797491402480465069">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="64" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13797105273516753557">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_73b.cpp" line="84" column="49"/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12878227006518698841">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="48" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="37" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="45" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="43" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="41" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="9702382327820767444">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="72" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="61" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="69" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="67" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="65" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="4713636201862205337">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="41" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="16619570128412449888">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="65" column="49"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="512626983709818575">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_74b.cpp" line="85" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="14925703053343476370">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="11916281113141063198">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="14594231622756216099">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="4660828603974873617">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="37" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="25" column="99" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="34" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="30" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="1913467343664776603">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_bad.cpp" line="30" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="545267722156030903">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="14088705348307765612">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="13220324197702879023">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="13159627982954287621">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodB2G.cpp" line="30" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="10802658064183669352">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="7668659439104894438">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="16099736222334264451">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="6441128765948021490">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="37" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="25" column="103" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="34" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="30" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="12584181399648287679">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81_goodG2B.cpp" line="30" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="9622653719323028274">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="17576725665883215352">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="11929232382322916327">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_81.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="18506701162150306">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="12793077613481323004">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="12280171607321661772">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="18250772593124723868">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="37" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="25" column="99" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="34" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="30" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="6451119771641063208">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad.cpp" line="30" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="15230028273230902519">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="4999464355158426178">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="6301872872954121811">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7847653172780432554">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G.cpp" line="30" column="49"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="4881270436834604769">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="9474906238119066972">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="13308623077212951618">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="14871091512318363250">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="37" column="29"/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="25" column="103" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="34" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="32" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="30" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9794056913234009336">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B.cpp" line="30" column="49"/>
        </error>
        <error id="virtualDestructor" severity="error" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad&apos; does not have a virtual destructor." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad&apos; does not have a virtual destructor. If you destroy instances of the derived class by deleting a pointer that points to the base class, only the destructor of the base class is executed. Thus, dynamic memory that is managed by the derived class could leak. This can be avoided by adding a virtual destructor to the base class." cwe="404" hash="1115879196562596493">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="29" column="1"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base</symbol>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_bad</symbol>
        </error>
        <error id="virtualDestructor" severity="error" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B&apos; does not have a virtual destructor." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B&apos; does not have a virtual destructor. If you destroy instances of the derived class by deleting a pointer that points to the base class, only the destructor of the base class is executed. Thus, dynamic memory that is managed by the derived class could leak. This can be avoided by adding a virtual destructor to the base class." cwe="404" hash="4244375996052877983">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="29" column="1"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base</symbol>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodG2B</symbol>
        </error>
        <error id="virtualDestructor" severity="error" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G&apos; does not have a virtual destructor." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base&apos; which is inherited by class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G&apos; does not have a virtual destructor. If you destroy instances of the derived class by deleting a pointer that points to the base class, only the destructor of the base class is executed. Thus, dynamic memory that is managed by the derived class could leak. This can be avoided by adding a virtual destructor to the base class." cwe="404" hash="15589138883069383327">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="29" column="1"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_base</symbol>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82_goodB2G</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="16270544779887721873">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="41" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="17312392221767529301">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="51" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;action&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." hash="3977461964938026487">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="57" column="10" info="Function in derived class"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_82.h" line="33" column="18" info="Virtual function in base class"/>
            <symbol>action</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="14386318368180445549">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="16781935707500825439">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="2626290254923284296">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="17332452558139893997">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="2643458720282419159">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="24" column="161"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="10098370098613726588">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="44" column="29"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="38" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="41" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="37" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="9176909050221884647">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad.cpp" line="37" column="49"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="11957090308253206903">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="8794018032168169498">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="14257117104577579901">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="10927833480944598">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="856212449279006525">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" line="24" column="169"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="18001662896212766716">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G.cpp" line="37" column="49"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="7076437927515320448">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="6037462918786984626">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="16254778383124572793">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="2075608540706952041">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="3661784915216743746">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="24" column="169"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="12795818704335749369">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="44" column="29"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="52" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="41" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="37" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7003608788171457288">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B.cpp" line="37" column="49"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="5933276941599017402">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="4133747787375067671">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="5128252535091815039">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_83_goodB2G</symbol>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="11735714468998035331">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="4427285573936514217">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="3582034386122465141">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="16694674275959292386">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="6337488978750766540">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="24" column="161"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="2329758698145237317">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="44" column="29"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="38" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="41" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="37" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="8344918654063441520">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad.cpp" line="37" column="49"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="2794066553262749034">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="13768306214095765576">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="10879372015579225619">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="13756862432897492110">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="4287689132847937843">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" line="24" column="169"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="7589585605389317010">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G.cpp" line="37" column="49"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;data&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;data&apos; a value by passing the value to the constructor in the initialization list." cwe="398" hash="3806904130166847382">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="26" column="5"/>
            <symbol>data</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="1458019162201462073">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="14747091786823156217">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="9579038146231409070">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;dataCopy&apos; should be passed by const reference." verbose="Parameter &apos;dataCopy&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" hash="1736359778803859319">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="24" column="169"/>
            <symbol>dataCopy</symbol>
        </error>
        <error id="invalidContainer" severity="error" msg="Using iterator to local container &apos;data&apos; that may be invalid." verbose="Using iterator to local container &apos;data&apos; that may be invalid." cwe="664" hash="13548871651098033622">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="44" column="29"/>
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="52" column="16" info="Variable created here."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="41" column="17" info="After calling &apos;clear&apos;, iterators or references to the container&apos;s data may be invalid ."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="39" column="17" info="Assuming condition is true."/>
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="37" column="18" info="Iterator to container is created here."/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" hash="14247577398537771591">
            <location file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B.cpp" line="37" column="49"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="5391623998581791344">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="34" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_bad</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="16627220500227913898">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="48" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodG2B</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" hash="8844094321402680590">
            <location file0="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84a.cpp" file="/home/input/C/testcases/CWE672_Operation_on_Resource_After_Expiration_or_Release/CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84.h" line="58" column="5"/>
            <symbol>CWE672_Operation_on_Resource_After_Expiration_or_Release__list_int_84_goodB2G</symbol>
        </error>
        <error id="missingInclude" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
